@charset "UTF-8";
@-webkit-keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem) rotate(0deg);
            transform: translateX(-10rem) rotate(0deg);
  }
  60% {
    -webkit-transform: rotate(180deg);
            transform: rotate(180deg);
  }
  /* 这里可以造就一个小小的回弹效果，往右边稍微移动一下 */
  80% {
    -webkit-transform: translateX(1rem) rotate(180deg);
            transform: translateX(1rem) rotate(180deg);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}
@keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem) rotate(0deg);
            transform: translateX(-10rem) rotate(0deg);
  }
  60% {
    -webkit-transform: rotate(180deg);
            transform: rotate(180deg);
  }
  /* 这里可以造就一个小小的回弹效果，往右边稍微移动一下 */
  80% {
    -webkit-transform: translateX(1rem) rotate(180deg);
            transform: translateX(1rem) rotate(180deg);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@-webkit-keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

/* 这个动画设置是让按钮从下到上进入页面 */
@-webkit-keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  letter-spacing: 5px;
  /* ****这里有一个神秘的现象，当动画渲染完后，会很轻微上跳一下，目前没人知道原因，但可以用以下方法去除这种现象 */
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  -webkit-animation-name: moveInLeft;
          animation-name: moveInLeft;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  /* animation-timing-function specifies how a css animation should progress over the duration of each cycle */
  /* ease-in is slower towards the beginning and faster towards the end, ease-out is the opposite */
  -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
  /* 添加下面这个animation-delay后，进入网页时，动画效果不会立即出现，会延迟三秒才出现 */
  /* animation-delay: 3s; */
  /* 设置进入网页后或者刷新网页后动画运行次数 */
  /* animation-iteration-count: 3; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* animation-name, animation-duration和animation-timing-function
    这三个最重要的animation参数可以合成一个animation */
  -webkit-animation: moveInRight 1s ease-out;
          animation: moveInRight 1s ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: -webkit-gradient(linear, left top, right top, from(#55c57a), to(#28b485));
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scale(1.1);
          transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.btn {
  /* 这两个只要是anchor tag最好都加上:link和:visited */
  /* :active就是指点击的时候 */
  /* 这里.btn::after相当于再建一个button，content属性必须添加，可以为空值
   这个.btn::after相当于.btn的子元素，所以height: 100%和width: 100%
   是相对于.btn而言
*/
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  /* 添加position是为了设置.btn::after隐藏再.btn后面 */
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  -webkit-transform: translateY(-0.3rem);
          transform: translateY(-0.3rem);
  /* box-shadow: x y blur值 color */
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:hover::after {
  /* scaleX在x方向上缩放, scaleY在y方向上缩放 */
  -webkit-transform: scale(1.6);
          transform: scale(1.6);
  /* 这个trick就用与fade something out, 非常有用.btn::after在鼠标在按钮上悬浮时变透明，看上去就像逐渐消失一样 */
  opacity: 0;
}

.btn:active {
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--white::after {
  background-color: #fff;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* transition属性一定要放在初始的元素状态上 */
  -webkit-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--animated {
  /* animation-name, animation-duration, animation-timing-function, animation-delay */
  -webkit-animation: moveInBottom 0.5s ease-out 0.75s;
          animation: moveInBottom 0.5s ease-out 0.75s;
  /* 由于.btn 和.btn-animated 在同一个元素上，后续.btn-animated类会在其他元素上使用所以这样设置,
       这就导致了元素一开始并不会在动画等待时间里从初始帧的属性应用，用backwards就是将元素设置为第一帧时候
       的属性应用。
    */
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}

.row:not(:last-child) {
  margin-bottom: 8rem;
}

.row::after {
  clear: both;
  content: "";
  display: table;
}

.row [class^="col-"] {
  float: left;
}

.row [class^="col-"]:not(:last-child) {
  margin-right: 6rem;
}

.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
}

.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3);
}

.row .col-2-of-3 {
  width: calc( (100% - 2 * 6rem) / 3 * 2 + 6rem);
}

.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4);
}

.row .col-2-of-4 {
  width: calc( (100% - 3 * 6rem) / 4 * 2 + 6rem);
}

.row .col-3-of-4 {
  width: calc( (100% - (100% - 3 * 6rem) / 4) - 6rem);
}

.header {
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(85, 197, 122, 0.8)), to(rgba(40, 180, 133, 0.8))), url("../img/hero.jpg");
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100vh);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100vh);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  /* 这里的top和left是相对于父元素而言，父元素是.header的div, 其position是relative */
  top: 40%;
  left: 50%;
  /* translate中的-50% -50%意味着将该元素相对自己的左边x轴，上边y轴移动增量的距离，负数向左，正数向右 */
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  text-align: center;
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
}
/*# sourceMappingURL=main.css.map */